//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    sanitize_fastq = false
    samples = null
    max_len = 2000
    min_len = 200
    taxonomy = null
    minimap2 = false
    reference = null
    ref2taxid = null
    minimap2filter = null
    minimap2exclude = false
    split_prefix = false
    kraken2 = false
    database = null
    kraken2filter = null
    kraken2exclude = false
    kraken2minimap = true
    out_dir = "output"
<<<<<<< HEAD
    samples = null
    sanitize_fastq = false
    wfversion = "v0.0.6"
=======
    report_name= "report"
    wfversion = "v0.0.1"
    threads = 8
>>>>>>> carryover
    aws_image_prefix = null
    aws_queue = null
    source = "TARGLOCI"
    sources = [
        'TARGLOCI': [
            'reference': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-ribosomal-survey/targeted_loci/ncbi_targeted_loci_16s_18s.fna',
            'refindex': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-ribosomal-survey/targeted_loci/ncbi_targeted_loci_16s_18s.fna.fai',
            'database': 'https://ont-exd-int-s3-euwst1-epi2me-labs/wf-ribosomal-survey/targeted_loci/ncbi_targeted_loci_kraken2.tar.gz',
            'ref2taxid': 'https://ont-exd-int-s3-euwst1-epi2me-labs.s3.amazonaws.com/wf-ribosomal-survey/targeted_loci/ref2taxid.targloci.tsv',
            'taxonomy': 'https://ftp.ncbi.nih.gov/pub/taxonomy/taxdump.tar.gz'
        ]
    ]
}


executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}

profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
        process {
            withLabel:wf_ribosomal_survey {
                container = "ontresearch/wf-ribosomal-survey:${params.wfversion}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    
    // profile using conda environments rather than docker
    // containers
    conda {
        docker {
            enabled = false
        }
        process {
            withLabel:wf_ribosomal_survey {
                conda = "environment.yaml"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
             cacheDir = ""
        }
    }

    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wf_ribosomal_survey {
                container = "${params.aws_image_prefix}-wf-ribosomal-survey:${params.wfversion}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
